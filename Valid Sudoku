bool searchColumn(vector<string> A, int j, int x){
    int flag = 0;
    for(int i = 0; i < A.size(); i++){
        if(x == (A[i][j] - '0') && !flag)
            flag = 1;
        else if(x == (A[i][j] - '0') && flag){
            return true;
        }
    }
    return false;
}

bool searchRow(vector<string> A, int i, int x){
    int flag = 0;
    for(int j = 0; j < A.size(); j++){
        if(x == (A[i][j] - '0') && !flag)
            flag = 1;
        else if(x == (A[i][j] - '0') && flag){
            return true;
        }
    }
    return false;
}

bool searchBox(vector<string> A, int i, int j, int x){
    int flag = 0;
    for(int p = (i/3)*3; p < ((i/3)*3) + 3; p++){
        for(int q = (j/3)*3; q < ((j/3)*3) + 3; q++){
            if(x == (A[p][q] - '0') && !flag)
                flag = 1;
            else if(x == (A[p][q] - '0') && flag){
                return true;
            }
        }
    }
    return false;
}

int Solution::isValidSudoku(const vector<string> &A) {
    for(int i = 0; i < A.size(); i++){
        for(int j = 0; j < A.size(); j++){
            if((A[i][j] - '0') > 0){
                int x = A[i][j] - '0';
                if(searchColumn(A,j,x) || searchRow(A,i,x) || searchBox(A,i,j,x))
                    return 0;
            }
        }
    }
    return 1;
    
}
